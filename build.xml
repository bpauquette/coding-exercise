<project name="Appointments" default="deploy" basedir=".">
  <description>
    An appointment book project
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  <property name="lib.dir" location="lib" />
  <property name="cgi.dir"  location="C:\\Apache24\\cgi-bin" />
  <property name="jar.dir"  location="C:\\jars" />

  <target name="init">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>
	

  <target name="compile" depends="init"
        description="compile the source">
	<!-- create our ant classpath using the fileset task -->
	<path id="class.path">
	  <!-- include all jars in the lib directory and all sub-directories -->
	  <fileset dir="${lib.dir}">
	    <include name="**/*.jar" />
	  </fileset>
	</path>	

    <!-- Compile the Java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" classpathref="class.path" destdir="${build}"/>
  </target>
	
  <target name="jar" depends="compile" description="generate the distribution">
	        <mkdir dir="${dist}/lib"/>
	        <jar destfile="${dist}/lib/Appointments.jar" basedir="build">
	            <manifest>
	                <attribute name="Main-Class" value="com.pauquette.appointments.model.AppointmentsDAO"/>
	            </manifest>
	        </jar>
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
	
  <target name="really-clean"
	        description="clean up">
	    <!-- Delete the ${build} and ${dist} directory trees and the final output production area -->
	    <delete dir="${build}"/>
	    <delete dir="${dist}"/>
  	    <delete dir="${jar.dir}"/>
  	    <mkdir dir="${jar.dir}"/> 
  </target>	
	
  <target name="deploy" depends="jar"
	        description="copy all used jar files to production use area">
  	<!-- deploy depended upon jar files here -->
  	<copy todir="${jar.dir}">
  	  <fileset dir="${lib.dir}">
  	    <include name="**/*.jar"/>
  	  </fileset>
  	</copy>
    <!-- deploy our actual final java code artifact here -->
  	<copy todir="${jar.dir}">
  	  <fileset dir="${dist}/lib" includes="**/Appointments.jar"/>
  	</copy>
  </target>	
</project>